void writeFile(float* vertex, int vertexCount, uint32_t* index, int indexCount){
    std::ofstream fileV, fileI;
    fileV.open("data/MC_Project/vertices.dat");
    fileI.open("data/MC_Project/indices.dat");


    for(int i=0;i<vertexCount;i++)
        fileV << vertex[i] << std::endl;

    for(int i=0;i<indexCount;i++)
        fileI << index[i] << std::endl;


    fileV.close();
    fileI.close();
}


	float* vertexData = nullptr; 
    int vertexCount=0; 
 
    uint32_t* indexData = nullptr; 
    int indexCount=0;


	vertexCount = 6*vertex_count;
     vertexData = (float*)malloc(sizeof(float) * vertexCount);
     cudaError_t e = cudaMemcpy((void*)vertexData, vertex_data_d, sizeof(float) * vertexCount, cudaMemcpyDeviceToHost);
     std::cout<<"Vertex data memcpy error: "<<cudaGetErrorString(e)<<'\n';


    indexData = (uint32_t*)malloc(sizeof(uint32_t)*index_count);
    indexCount = index_count;
     e = cudaMemcpy((void*)indexData, index_data_d, sizeof(uint32_t)*indexCount, cudaMemcpyDeviceToHost);
     std::cout<<"Index Data memcpy error: "<<cudaGetErrorString(e)<<'\n';

